name: Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os:
          - {image: macos-latest, name: macOS}
          - {image: windows-latest, name: Windows}
          - {image: ubuntu-latest, name: Linux}
        go: ['1.18', '1.19', '1.20', '1.21', '1.22']

    runs-on: ${{matrix.os.image}}
    name: "ðŸ§ª ${{matrix.os.name}} // Go v${{matrix.go}}"

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: setup-go
        uses: actions/setup-go@v5
        with:
          go-version: ${{matrix.go}}

        # Work around a problem in GitHub Actions
      - name: set-cc
        if: startsWith(matrix.os.image, 'windows') && (matrix.go == '1.18' || matrix.go == '1.19')
        run: |
          'CC=c:\mingw64\bin\gcc' | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: build
        run: go build

  test-dragonfly:
    runs-on: ubuntu-latest
    name: "ðŸ§ª Dragonfly // Tests"

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: dragonfly-vm
        uses: vmactions/dragonflybsd-vm@v1
        with:
          usesh: true
          prepare: pkg install -y go
          run: |
            uname -a
            go version
            go build

  test-freebsd:
    runs-on: ubuntu-latest
    name: "ðŸ§ª FreeBSD // Tests"

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: freebsd-vm
        uses: vmactions/freebsd-vm@v1
        with:
          usesh: true
          prepare: pkg install -y go
          run: |
            uname -a
            go version
            go build

  test-netbsd:
    runs-on: ubuntu-latest
    name: "ðŸ§ª NetBSD // Tests"

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: netbsd-vm
        uses: vmactions/netbsd-vm@v1
        with:
          prepare: pkg_add go pkg_alternatives
          run: |
            uname -a
            go version
            go build

  test-openbsd:
    runs-on: ubuntu-latest
    name: "ðŸ§ª OpenBSD // Tests"

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: openbsd-vm
        uses: vmactions/openbsd-vm@v1
        with:
          prepare: |
            for i in $(jot 10); do
              echo attempt $i:
              pkg_add -vv go && break
            done
          run: |
            uname -a
            go version
            go build
